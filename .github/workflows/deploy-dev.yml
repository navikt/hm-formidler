name: Build, deploy to dev-gcp
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
    branches:
      - main
      - ny-rapport-tabell

env:
  IMAGE: 'ghcr.io/navikt/hm-formidler:${{ github.sha }}'

jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: pre-deploy
        uses: navikt/digihot-deploy/actions/pre-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_IMAGE: ghcr.io/navikt/hm-formidler
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Package Repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up .npmrc to use in Docker build
        uses: actions/setup-node@v3
        with:
          registry-url: "https://npm.pkg.github.com"

      - run: cp $NPM_CONFIG_USERCONFIG .npmrc

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ env.IMAGE }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"
      - name: deploy to dev-intern
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev-intern.yaml
          VAR: image=${{ env.IMAGE }},commit=${{ github.sha }}
      - name: post-deploy
        if: github.ref == 'refs/heads/main'
        uses: navikt/digihot-deploy/actions/post-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: draft release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: ${{ env.APPLICATION }} ${{ env.VERSION_TAG }}
          body: ${{ env.CHANGE_LOG }}
          draft: true
          prerelease: false
      - name: deploy to dev-ekstern
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev-ekstern.yaml
          VAR: image=${{ env.IMAGE }},commit=${{ github.sha }}