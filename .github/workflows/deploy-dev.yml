name: Build, deploy to dev-gcp and create release
on:
  push:
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENCE"
      - "CODEOWNERS"
    branches:
      - main
      - utleveringsvalg

env:
  DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/hm-formidler:${{ github.sha }}

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build and push Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --pull --tag $DOCKER_IMAGE .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push $DOCKER_IMAGE
  
  deployDev:
    name: Deploy to dev-gcp
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy to dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          PRINT_PAYLOAD: true
          VAR: commit=${{ github.sha }},image=${{ env.DOCKER_IMAGE }}
  
  deployLabs:
    name: Deploy to labs-gcp
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy to labs-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          DEPLOY_SERVER: deploy.nais.io:443 # Workaround https://nav-it.slack.com/archives/C5KUST8N6/p1674573453174539?thread_ts=1674572577.446359&cid=C5KUST8N6
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: .nais/labs-gcp.yaml
          PRINT_PAYLOAD: true
          VAR: commit=${{ github.sha }},image=${{ env.DOCKER_IMAGE }}
  
  createRelease:
    name: Create release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deployDev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Pre-deploy
        uses: navikt/digihot-deploy/actions/pre-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Post-deploy
        uses: navikt/digihot-deploy/actions/post-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: ${{ env.APPLICATION }} ${{ env.VERSION_TAG }}
          body: ${{ env.CHANGE_LOG }}
          draft: true
          prerelease: false
  
  createSentryRelease:
    name: Create Sentry release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install and build application
        run: |
          yarn install
          yarn --cwd ./client install
          yarn --cwd ./server install
          yarn build
      - name: Lag sentry release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          npx -p @sentry/cli sentry-cli releases new "${{ github.sha }}"
          npx -p @sentry/cli sentry-cli releases files "${{ github.sha }}" upload-sourcemaps client/dist/assets \
              --url-prefix '~/hjelpemidler/formidler/assets'
          npx -p @sentry/cli sentry-cli releases finalize "${{ github.sha }}"