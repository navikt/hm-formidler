name: Build, deploy to dev-gcp and create release
on:
  push:
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENCE"
      - "CODEOWNERS"
    branches:
      - main
      - DIGIHOT-714-sentry
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: yarn install
      - run: yarn test
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install and build application
        run: |
          yarn install
          yarn build
      - name: Lag sentry release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          npx -p @sentry/cli sentry-cli releases new "${{ github.sha }}"
          npx -p @sentry/cli sentry-cli releases files "${{ github.sha }}" upload-sourcemaps build/static/js \
              --url-prefix '~/hm-formidler/static/js'
          npx -p @sentry/cli sentry-cli releases finalize "${{ github.sha }}"
      - name: Pre-deploy
        uses: navikt/digihot-deploy/actions/pre-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --pull --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}
      # - name: Deploy to labs-gcp
      #   uses: nais/deploy/actions/deploy@v1
      #   env:
      #     APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
      #     CLUSTER: labs-gcp
      #     RESOURCE: .nais/labs-gcp.yaml
      #     PRINT_PAYLOAD: true
      #     VAR: commit=${{ github.sha }}
      - name: Deploy to dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yaml
          PRINT_PAYLOAD: true
          VAR: commit=${{ github.sha }}
      - name: Post-deploy
        uses: navikt/digihot-deploy/actions/post-deploy@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: ${{ env.APPLICATION }} ${{ env.VERSION_TAG }}
          body: ${{ env.CHANGE_LOG }}
          draft: true
          prerelease: false